<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"> 
			<value>classpath:properties/db.properties</value>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="defaultAutoCommit" value="true" />
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlsession">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="WEB-INF/spring/sqls/SqlMapConfig.xml"/>
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlsession"/>
	</bean>
	
	<!-- Transaction 처리를 위한 객체 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- tansaction 처리하는 방법-->
	<!-- 
	1번째 
		@transactional
		method(){}
	@어노테이션을 쓰기 위한 준비-->
	
		<tx:annotation-driven transaction-manager="transactionManager"   proxy-target-class="true"/> 
	<!--
	2번째	
		proxy-target-class 설정 true
		처리 대상 클래스가 인터페이스를 구현하지 않은 경우 true설정 사용
	-->
		
		<aop:config>
			<aop:pointcut expression=
			"execution(* com.hk.answer.service.*Service.*Board(..))" id="serviceTransaction"/>
			<aop:advisor id="transactionAdvisor" advice-ref="txAdvice" pointcut-ref="serviceTransaction"/>
		</aop:config>
	
		<tx:advice transaction-manager="transactionManager" id="txAdvice">
			<tx:attributes>
				<tx:method name="*Board" propagation="REQUIRED" rollback-for="Exception"/>
			</tx:attributes>
		</tx:advice>
		
</beans>
